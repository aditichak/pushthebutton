{"version":3,"sources":["../src/Client.js"],"names":["Client","auth","api","query","listLibraries","then","libraries","payload","body","data","map","l","name","getLibrary","library","archive","publishLibrary","error","errors","errorMessages","e","message","join","Error","url","downloadFile","files","platformId","targetVersion","compileCode"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;;;IAEqBA,M;AACpB,uBAA4C;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,sBAAxBC,GAAwB;AAAA,MAAxBA,GAAwB,4BAAlB,wBAAkB;AAAA;;AAC3C,wBAAc,IAAd,EAAoB,EAAED,UAAF,EAAQC,QAAR,EAApB;AACA;;AAED;;;;;;;;;8BAKsB;AAAA;;AAAA,OAAZC,KAAY,yDAAJ,EAAI;;AACrB,UAAO,KAAKD,GAAL,CAASE,aAAT,CAAuB,sBAAc,EAAd,EAAkBD,KAAlB,EAAyB,EAAEF,MAAM,KAAKA,IAAb,EAAzB,CAAvB,EACNI,IADM,CACD,mBAAW;AAChB,QAAMC,YAAYC,QAAQC,IAAR,CAAaC,IAAb,IAAqB,EAAvC;AACA,WAAOH,UAAUI,GAAV,CAAc;AAAA,YAAK,6BAAkBC,CAAlB,CAAL;AAAA,KAAd,CAAP;AACA,IAJM,CAAP;AAKA;;AAED;;;;;;;;;0BAMQC,I,EAAkB;AAAA;;AAAA,OAAZT,KAAY,yDAAJ,EAAI;;AACzB,UAAO,KAAKD,GAAL,CAASW,UAAT,CAAoB,sBAAc,EAAd,EAAkBV,KAAlB,EAAyB,EAAES,UAAF,EAAQX,MAAM,KAAKA,IAAnB,EAAzB,CAApB,EACLI,IADK,CACA,mBAAW;AAChB,QAAMS,UAAUP,QAAQC,IAAR,CAAaC,IAAb,IAAqB,EAArC;AACA,WAAO,8BAAkBK,OAAlB,CAAP;AACA,IAJK,CAAP;AAKA;;AAGD;;;;;;;;iCAKeC,O,EAAS;AAAA;;AACvB,UAAO,KAAKb,GAAL,CAASc,cAAT,CAAwB,EAAED,gBAAF,EAAWd,MAAM,KAAKA,IAAtB,EAAxB,EACLI,IADK,CACA,mBAAW;AAChB,QAAMS,UAAUP,QAAQC,IAAR,CAAaC,IAAb,IAAqB,EAArC;AACA,WAAO,8BAAkBK,OAAlB,CAAP;AACA,IAJK,EAIH,iBAAS;AACX,QAAIG,MAAMT,IAAN,IAAcS,MAAMT,IAAN,CAAWU,MAA7B,EAAqC;AACpC,SAAMC,gBAAgBF,MAAMT,IAAN,CAAWU,MAAX,CAAkBR,GAAlB,CAAsB,UAACU,CAAD;AAAA,aAAOA,EAAEC,OAAT;AAAA,MAAtB,EAAwCC,IAAxC,CAA6C,IAA7C,CAAtB;AACA,WAAM,IAAIC,KAAJ,CAAUJ,aAAV,CAAN;AACA;AACD,UAAMF,KAAN;AAEA,IAXK,CAAP;AAYA;AACA;;;+BAMYO,G,EAAK;AACjB,UAAO,KAAKtB,GAAL,CAASuB,YAAT,CAAsB,EAAED,QAAF,EAAtB,CAAP;AACA;;;8BAEWE,K,EAAOC,U,EAAYC,a,EAAe;AAC7C,UAAO,KAAK1B,GAAL,CAAS2B,WAAT,CAAqB,EAAEH,YAAF,EAASC,sBAAT,EAAqBC,4BAArB,EAAoC3B,MAAM,KAAKA,IAA/C,EAArB,CAAP;AACA;;;;;kBAhEmBD,M","file":"Client.js","sourcesContent":["import Particle from './Particle';\nimport Library from './Library';\n\nexport default class Client {\n\tconstructor({ auth, api = new Particle() }) {\n\t\tObject.assign(this, { auth, api });\n\t}\n\n\t/**\n\t * Get firmware library objects\n\t * @param  {Object} query The query parameters for libraries. See Particle.listLibraries\n\t * @return {Promise}\n\t */\n\tlibraries(query = {}) {\n\t\treturn this.api.listLibraries(Object.assign({}, query, { auth: this.auth }))\n\t\t.then(payload => {\n\t\t\tconst libraries = payload.body.data || [];\n\t\t\treturn libraries.map(l => new Library(this, l));\n\t\t});\n\t}\n\n\t/**\n\t * Get one firmware library object\n\t * @param  {String} name Name of the library to fetch\n\t * @param  {Object} query The query parameters for libraries. See Particle.getLibrary\n\t * @return {Promise}\n\t */\n\tlibrary(name, query = {}) {\n\t\treturn this.api.getLibrary(Object.assign({}, query, { name, auth: this.auth }))\n\t\t\t.then(payload => {\n\t\t\t\tconst library = payload.body.data || {};\n\t\t\t\treturn new Library(this, library);\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Publish a new library version\n\t * @param  {Buffer} archive The compressed archive with the library source\n\t * @return {Promise}\n\t */\n\tpublishLibrary(archive) {\n\t\treturn this.api.publishLibrary({ archive, auth: this.auth })\n\t\t\t.then(payload => {\n\t\t\t\tconst library = payload.body.data || {};\n\t\t\t\treturn new Library(this, library);\n\t\t\t}, error => {\n\t\t\t\tif (error.body && error.body.errors) {\n\t\t\t\t\tconst errorMessages = error.body.errors.map((e) => e.message).join('\\n');\n\t\t\t\t\tthrow new Error(errorMessages);\n\t\t\t\t}\n\t\t\t\tthrow error;\n\n\t\t\t});\n\t\t// TODO: format error\n\t}\n\n\n\n\n\n\tdownloadFile(url) {\n\t\treturn this.api.downloadFile({ url });\n\t}\n\n\tcompileCode(files, platformId, targetVersion) {\n\t\treturn this.api.compileCode({ files, platformId, targetVersion, auth: this.auth });\n\t}\n}\n"]}